[{"/home/aa019/dev/kkanbu-ninja/src/app/layout.tsx":"1","/home/aa019/dev/kkanbu-ninja/src/app/page.tsx":"2","/home/aa019/dev/kkanbu-ninja/src/app/api/user/route.ts":"3"},{"size":282,"mtime":1681110236052,"results":"4","hashOfConfig":"5"},{"size":5533,"mtime":1681126862672,"results":"6","hashOfConfig":"5"},{"size":1499,"mtime":1681126669632,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k89io6",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aa019/dev/kkanbu-ninja/src/app/layout.tsx",[],[],"/home/aa019/dev/kkanbu-ninja/src/app/page.tsx",["18"],[],"\"use client\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React , { useEffect, useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nasync function getData() {\n  const res = await fetch(`api/user`); //10 min cache\n\n  // The return value is *not* serialized\n  // You can return Date, Map, Set, etc.\n\n  // Recommendation: handle errors\n  if (!res.ok) {\n    // This will activate the closest `error.js` Error Boundary\n    alert('아 에러낫삼 걍 다시해보셈 그래도 안되면 아몰랑')\n    throw new Error('Failed to fetch data');\n  }\n\n  return res.json();\n}\n\nexport default function Page() {\n  const [original, setOriginal] = useState<any[]>([])\n  const [filtered, setFilter] = useState<any[]>([])\n  const [gemList, setGemList] = useState<any[]>([])\n  \n  const [filterName, setName] = useState<string>('')\n  const [filterGem, setGem] = useState<string>('')\n  const [filterGemInput, setGemInput] = useState<string>('')\n  useEffect(()=>{\n    (async () => {\n      const data = await getData();\n      setOriginal(data.userData)\n      setFilter(data.userData)\n      const gemSet = await data.userData.reduce((acc:any, user:any)=>{\n        user.items?.allGems.forEach((gemName:any)=>{\n          acc.add(gemName)\n        })\n        \n        return acc\n      },new Set())\n      \n      setGemList(Array.from(gemSet))\n    })()\n  },[])\n  \n  const findGem = (e:any)=>{\n    const gemName = e.target.value||''\n    setGem(gemName)\n  }\n\n  const findName = (e:any)=>{\n    setName(e.target.value||'')\n  }\n\n  useEffect(()=>{\n    if (filterName==='' && filterGem===''){\n      setFilter(original)\n      return\n    }else{\n      const newFiltered = original.filter(user=>{\n        const gemCheck = filterGem && user.items?.allGems.findIndex((gem:any)=>gem===filterGem)>-1\n        \n        const nameCheck = filterName && (user.name.includes(filterName) || user.account?.includes(filterName) || user.class.includes(filterName))\n        return Boolean(gemCheck||nameCheck)\n      })\n      setFilter(newFiltered)\n    }\n\n    \n  },[filterGem, filterName])\n  \n\n  console.log('filtered', filtered)\n  return <main className=\"flex min-h-screen flex-col items-center justify-between p-24\">\n    \n    <TableContainer component={Paper}>\n    <h2 style={{fontSize:50}}>깐부?</h2>\n    <div style={{margin:20}}>\n    <TextField id=\"outlined-basic\" label=\"검색\" variant=\"outlined\" onChange={findName} />\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      options={gemList}\n      sx={{ width: 300 }}\n      value={filterGem}\n        onChange={(event: any, newValue: string |null) => {\n          setGem(newValue||'');\n        }}\n        inputValue={filterGemInput}\n        onInputChange={(event, newInputValue) => {\n          setGemInput(newInputValue);\n        }}\n      renderInput={(params) => <TextField {...params} label=\"쩸\" />}\n    />\n    \n      </div>\n      <Table sx={{ minWidth: 850 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n          <TableCell>순위</TableCell>\n            <TableCell>계정명</TableCell>\n            <TableCell style={{maxWidth:180}}>케릭명</TableCell>\n            <TableCell>육개장</TableCell>\n            <TableCell>직업</TableCell>\n            \n            <TableCell align=\"right\">레베루</TableCell>\n            <TableCell align=\"right\" style={{maxWidth:120}}>경험치</TableCell>\n            <TableCell align=\"right\">챌린지</TableCell>\n            <TableCell>보러가기</TableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filtered.map((row:any) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.rank}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.account}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" style={{maxWidth:180}}>\n                {row.name}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.dead?'쥬금':'아직안쥬금'}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.class}\n              </TableCell>\n              <TableCell align=\"right\">{row.level}</TableCell>\n              <TableCell align=\"right\" style={{maxWidth:120}}>{row.experience}</TableCell>\n              <TableCell align=\"right\">{row.challenges?.completed}</TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <a target='_blank' href={`https://www.pathofexile.com/account/view-profile/${row.account}/characters?characterName=${row.name}`}>\n                  POE\n                </a>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </main>\n}","/home/aa019/dev/kkanbu-ninja/src/app/api/user/route.ts",[],[],{"ruleId":"19","severity":1,"message":"20","line":83,"column":5,"nodeType":"21","endLine":83,"endColumn":28,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'original'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilter' needs the current value of 'original'.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [filterGem, filterName, original]",{"range":"26","text":"27"},[2602,2625],"[filterGem, filterName, original]"]